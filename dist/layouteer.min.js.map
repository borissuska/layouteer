{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/layouteer.js","webpack:///./src/editor.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_editor","Layouteer","options","_classCallCheck","this","columnsCount","columnSize","content","generateLayout","editor","_editor2","default","chWidth","chHeight","lines","split","length","lineLength","width","height","ruler","column","Math","round","boundryRow","contentRow","_layouteer","LayouteerEditor","element","layouteer","dim","_layouteer2","contentDimensions","index","Array","cursor","undefined","selection","bindToElement","addEventListener","e","setCursor","target","_index","code","next","bottom","metaKey","ctrlKey","isHorizontalLine","top","previous","left","row","previousColumnIndex","right","nextColumnIndex","isCorner","isVerticalLine","setValue","key","makeColumn","makeRow","preventDefault","classList","add","tabIndex","bindEventHandlers","document","createElement","innerHTML","generateRuler","join","appendChild","idxRow","j","ch","cell","leftIdxItem","topIdxItem","currentIdxItem","LayouteerEditorCell","el","rowEl","line","__buildLineIndex__","getHLineInfo","lineIndex","horizontal","hLineCells","startingLines","from","to","iCell","push","getVlineInfo","vertical","vLineCells","cellIndex","remove","parseInt","regionCell","extend","getValue","window"],"mappings":"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","file":"layouteer.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","import LayouteerEditor from './editor';\n\nexport default class Layouteer {\n    constructor(options) {\n        this.columnsCount = options.columnsCount || 12;\n        this.columnSize = options.columnSize || 11;\n        this.content = options.content || Layouteer.generateLayout(this.columnsCount, this.columnSize);\n        this.editor = new LayouteerEditor(options.editor, this);\n    }\n    static init(options) {\n        return new Layouteer(options);\n    }\n    static contentDimensions(content) {\n        let chWidth = 0, chHeight = 0;\n        // check if every line has the same length\n        const lines = content.split('\\n');\n        chHeight = lines.length;\n        for (let i = 0; i < lines.length; i++) {\n            const lineLength = lines[i].length;\n            if (lineLength == 0) {\n                chHeight += 1;\n            }\n            else if (chWidth == 0) {\n                chWidth = lineLength;\n            }\n            else if (chWidth != lineLength) {\n                return false;\n            }\n        }\n        // return width, height object\n        return {\n            width: chWidth,\n            height: chHeight\n        };\n    }\n    static generateRuler(columnsCount, columnSize) {\n        let ruler = '|';\n        let column = '';\n        for (let i = 0; i < columnSize; i++) {\n            column += ' ';\n        }\n        column += '|';\n        for (let i = 0; i < columnsCount; i++) {\n            ruler += column;\n        }\n        return ruler;\n    }\n    static generateLayout(columnsCount, columnSize) {\n        const width = columnsCount * columnSize + columnsCount + 1;\n        const height = Math.round(width * 9.6 / 16 * 9 / 18);\n        let boundryRow = '+';\n        let contentRow = '|';\n        for (let i = 0; i < width - 2; i++) {\n            boundryRow += '-';\n            contentRow += ' ';\n        }\n        boundryRow += '+';\n        contentRow += '|';\n        let content = `${boundryRow}\\n`;\n        for (let i = 0; i < height - 2; i++) {\n            content += `${contentRow}\\n`;\n        }\n        return content + boundryRow;\n    }\n}\n","import Layouteer from './layouteer';\n\n/**\n * Layouteer editor class\n */\nexport default class LayouteerEditor {\n\n    constructor(element, layouteer) {\n        if (!element) {\n            throw 'Editor element is not defined, unable create editor';\n        }\n        const dim = Layouteer.contentDimensions(layouteer.content);\n        if (!dim) {\n            throw 'Invalid content dimensions, unable create editor.';\n        }\n        this.element = element;\n        this.layouteer = layouteer;\n        // allocate index\n        this.index = new Array(dim.height);\n        for (let i = 0; i < dim.height; i++) {\n            this.index[i] = new Array(dim.width);\n        }\n        this.cursor = undefined;\n        this.selection = undefined;\n        this.bindToElement();\n    }\n\n    /**\n     * Bind key and mouse events to editor\n     */\n    bindEventHandlers() {\n        const editor = this;\n        this.element.addEventListener('click', function (e) {\n            editor.setCursor(e.target._index);\n        });\n        this.element.addEventListener('keydown', function (e) {\n            switch (e.code) {\n                case 'ArrowDown': {\n                    let next = editor.cursor.bottom;\n                    while ((e.metaKey || e.ctrlKey) && next && !next.isHorizontalLine()) {\n                        next = next.bottom;\n                    }\n                    \n                    if (next) {\n                        editor.setCursor(next);\n                    }\n                    break;\n                }\n                case 'ArrowUp': {\n                    let top = editor.cursor.top;\n                    while ((e.metaKey || e.ctrlKey) && top && !top.isHorizontalLine()) {\n                        top = top.top;\n                    }\n                    \n                    if (top) {\n                        editor.setCursor(top);\n                    }\n                    break;\n                }\n                case 'ArrowLeft': {\n                    let previous = editor.cursor.left;\n                    if (e.metaKey || e.ctrlKey || editor.cursor.isHorizontalLine()) {\n                        previous = editor.index[editor.cursor.row][editor.previousColumnIndex()];\n                    }\n                    if (previous) {\n                        editor.setCursor(previous);\n                    }\n                    break;\n                }\n                case 'ArrowRight': {\n                    let right = editor.cursor.right;\n                    if (e.metaKey || e.ctrlKey || editor.cursor.isHorizontalLine()) {\n                        right = editor.index[editor.cursor.row][editor.nextColumnIndex()];\n                    }\n                    if (right) {\n                        editor.setCursor(right);\n                    }\n                    break;\n                }\n                case 'Backspace': {\n                    if (editor.cursor.isCorner()) {\n                        // unable delete boundaries\n                        break;\n                    }\n                    if (editor.cursor.isHorizontalLine()) {\n                        // delete column line\n                        let bottom = editor.cursor.bottom;\n                        while (bottom && bottom.isVerticalLine()) {\n                            bottom.setValue('&nbsp;');\n                            if (bottom.right && bottom.right.isHorizontalLine()) {\n                                // continue horizontal line \n                                let left = bottom;\n                                do {\n                                    left.setValue('-');\n                                    left = left.left;\n                                } while (left && !left.isVerticalLine());\n                            }\n                            if (bottom.left && bottom.left.isHorizontalLine()) {\n                                // continue horizontal line\n                                let right = bottom;\n                                do {\n                                    right.setValue('-');\n                                    right = right.right;\n                                } while (right && !right.isVerticalLine());\n                            }\n                            bottom = bottom.bottom;\n                        }\n                    }\n                    else if (editor.cursor.isVerticalLine()) {\n                        // delete row line\n                        let right = editor.cursor.right;\n                        while (right && right.isHorizontalLine()) {\n                            right.setValue('&nbsp;');\n                            if (right.bottom && right.bottom.isVerticalLine()) {\n                                // continue vertical line \n                                let top = right;\n                                do {\n                                    top.setValue('|');\n                                    top = top.top;\n                                } while (top && !top.isHorizontalLine());\n                            }\n                            if (right.top && right.top.isVerticalLine()) {\n                                // continue vertical line\n                                let bottom = right;\n                                do {\n                                    bottom.setValue('|');\n                                    bottom = bottom.bottom;\n                                } while (bottom && !bottom.isHorizontalLine());\n                            }\n                            right = right.right;\n                        }\n                    }\n                    break;\n                }\n                case 'Enter': {\n                    break;\n                }\n                default: {\n                    switch (e.key) {\n                        case '|': {\n                            editor.makeColumn();\n                            break;\n                        }\n                        case '-': {\n                            editor.makeRow();\n                            break;\n                        }\n                        default: {\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n            e.preventDefault();\n        });\n    }\n\n    /**\n     * Bind editor to given HTML element, create content and bind handlers\n     */\n    bindToElement() {\n        this.element.classList.add('layouteer-editor');\n        this.element.tabIndex = 1;\n        // event handlers\n        this.bindEventHandlers();\n        // draw ruler\n        const ruler = document.createElement('div');\n        ruler.classList.add('ruler');\n        ruler.innerHTML = Layouteer.generateRuler(this.layouteer.columnsCount, this.layouteer.columnSize).split(' ').join('&nbsp;');\n        this.element.appendChild(ruler);\n        // draw centent\n        for (let i = 0; i < this.index.length; i++) {\n            const idxRow = this.index[i];\n            const row = document.createElement('div');\n            this.element.appendChild(row);\n            for (let j = 0; j < idxRow.length; j++) {\n                const ch = this.layouteer.content[i * idxRow.length + i + j];\n                const cell = document.createElement('span');\n                cell.innerHTML = ch != ' ' ? ch : '&nbsp;';\n                row.appendChild(cell);\n                const leftIdxItem = j > 0 ? this.index[i][j - 1] : undefined;\n                const topIdxItem = i > 0 ? this.index[i - 1][j] : undefined;\n                const currentIdxItem = this.index[i][j] = new LayouteerEditorCell({\n                    el: cell,\n                    rowEl: row,\n                    row: i,\n                    column: j,\n                    left: leftIdxItem,\n                    top: topIdxItem,\n                    right: undefined,\n                    bottom: undefined,\n                    line: undefined\n                });\n                cell._index = currentIdxItem;\n                if (leftIdxItem) {\n                    leftIdxItem.right = currentIdxItem;\n                }\n                if (topIdxItem) {\n                    topIdxItem.bottom = currentIdxItem;\n                }\n            }\n        }\n        this.__buildLineIndex__();\n        // set cursor\n        this.setCursor(this.index[0][0]);\n    }\n\n    /**\n     * Index lines\n     */\n    __buildLineIndex__() {\n        this.getHLineInfo(this.index[0][0]);\n    }\n\n    /**\n     * Index horizontal line\n     * \n     * @param {LayouteerEditorCell} cell where the horizontal line starts\n     * @returns {object} line index value \n     */\n    getHLineInfo(cell) {\n        const lineIndex = { horizontal: true },\n              hLineCells = {},\n              startingLines = [],\n              from = cell;\n        let to = cell;\n        if (cell) {\n            let iCell = cell;\n            // right\n            while (iCell && iCell.isHorizontalLine()) {\n                iCell.line = lineIndex;\n                hLineCells[iCell.column] = iCell;\n                to = iCell; // right-most cell\n                if (iCell.bottom && iCell.bottom.isVerticalLine()) {\n                    startingLines.push(this.getVlineInfo(iCell.bottom));\n                }\n                iCell = iCell.right;\n            }\n        }\n        lineIndex['cells'] = hLineCells;\n        lineIndex['from'] = from;\n        lineIndex['to'] = to;\n        lineIndex['startingLines'] = startingLines;\n        return lineIndex;\n    }\n\n    /**\n     * Index vertical line\n     * \n     * @param {LayouteerEditorCell} cell where the vertical line starts\n     * @returns {object} line index value \n     */\n    getVlineInfo(cell) {\n        const lineIndex = { vertical: true },\n              vLineCells = {},\n              startingLines = [],\n              from = cell;\n        let to = cell;\n        if (cell) {\n            let iCell = cell;\n            // down\n            while (iCell && iCell.isVerticalLine()) {\n                iCell.line = lineIndex;\n                vLineCells[iCell.row] = iCell;\n                to = iCell; // bottom-most cell\n                if (iCell.right && iCell.right.isHorizontalLine()) {\n                    startingLines.push(this.getHLineInfo(iCell.right));\n                }\n                iCell = iCell.bottom;\n            }\n        }\n        lineIndex['cells'] = vLineCells;\n        lineIndex['from'] = from;\n        lineIndex['to'] = to;\n        lineIndex['startingLines'] = startingLines;\n        return lineIndex;\n    }\n\n    /**\n     * Set the cursor position to given cell\n     * \n     * @param {LayouteerEditorCell} cellIndex cell where to set the cursor\n     */\n    setCursor(cellIndex) {\n        // remove class from previous cursor\n        if (this.cursor) {\n            this.cursor.el.classList.remove('cursor');\n        }\n        // set new cursor\n        this.cursor = cellIndex;\n        // new cursor could be undefined\n        if (this.cursor) {\n            this.cursor.el.classList.add('cursor');\n        }\n    }\n\n    /**\n     * Position of the next (right) column.\n     * \n     * @param {LayouteerEditorCell} from From which cell search for closest right column. If undefined current cursor position is used.\n     */\n    nextColumnIndex(from) {\n        if (from == undefined) {\n            from = this.cursor;\n        }\n        const currentColumn = parseInt(from.column / (this.layouteer.columnSize + 1));\n        return (currentColumn + 1) * (this.layouteer.columnSize + 1);\n    }\n\n    /**\n     * Position of the previous (left) column.\n     * \n     * @param {LayouteerEditorCell} from From which cell search for closest left column. If undefined current cursor position is used.\n     */\n    previousColumnIndex(from) {\n        if (from == undefined) {\n            from = this.cursor;\n        }\n        const currentColumn = parseInt((from.column - 1) / (this.layouteer.columnSize + 1));\n        return (currentColumn) * (this.layouteer.columnSize + 1);\n    }\n\n    /**\n     * Create new vertical line at closest column position.\n     */\n    makeColumn() {\n        if (this.cursor) {\n            if (this.cursor.isHorizontalLine()) {\n                // move cursor to closest column position\n                const column = Math.round(this.cursor.column / (this.layouteer.columnSize + 1)) * (this.layouteer.columnSize + 1);\n                this.setCursor(this.index[this.cursor.row][column]);\n                // find region boundry\n                let regionCell = this.cursor;\n                while (regionCell.left && regionCell.isHorizontalLine()) {\n                    regionCell = regionCell.left;\n                }\n                let cell = this.cursor, extend = false;\n                do {\n                    cell = cell.bottom;\n                    regionCell = regionCell.bottom;\n                    extend = false;\n                    //let cell = this.cursor.bottom;\n                    while (cell && !cell.isHorizontalLine()) {\n                        if (cell.isVerticalLine()) {\n                            extend = true;\n                        }\n                        cell.setValue('|');\n                        cell = cell.bottom;\n                        regionCell = regionCell.bottom;\n                    }\n                    extend = extend && regionCell.isVerticalLine() && !regionCell.isCorner();\n                    if (extend) {\n                        cell.setValue('|');\n                    }\n                } while (cell && extend);\n                this.__buildLineIndex__();\n            }\n        }\n    }\n    /**\n     * Create new horizontal line at current cursor position.\n     */\n    makeRow() {\n        if (this.cursor) {\n            if (this.cursor.isVerticalLine()) {\n                // find region boundry\n                let regionCell = this.cursor;\n                while (regionCell.top && regionCell.isVerticalLine()) {\n                    regionCell = regionCell.top;\n                }\n                // draw horizontal line\n                let cell = this.cursor, extend = false;\n                do {\n                    cell = cell.right;\n                    regionCell = regionCell.right;\n                    extend = false;\n                    while (cell && !cell.isVerticalLine()) {\n                        if (cell.getValue() == '-') {\n                            extend = true;\n                        }\n                        cell.setValue('-');\n                        cell = cell.right;\n                        regionCell = regionCell.right;\n                    }\n                    // check if not out of region boundaries\n                    extend = extend && regionCell.isHorizontalLine() && !regionCell.isCorner();\n                    if (extend) {\n                        cell.setValue('-');\n                    }\n                } while (cell && extend);\n                this.__buildLineIndex__();\n            }\n        }\n    }\n}\n\n/**\n * Editor cell. Contains cell value and meta information about near cells.\n */\nclass LayouteerEditorCell\n{\n    constructor(options)\n    {\n        /** @type {HTMLElement} element */\n        this.el = options.el;\n\n        /** @type {HTMLElement} row element */\n        this.rowEl = options.rowEl;\n        \n        /**\n         *  @deprecated Without row and column we can add new lines to document efectivelly\n         *  @type {number} row index\n         */\n        this.row = options.row;\n\n        /**\n         *  @deprecated Without row and column we can add new lines to document efectivelly\n         *  @type {number} column index\n         */\n        this.column = options.column;\n\n        /** @type {LayouteerEditorCell} cell on the left */\n        this.left = options.left\n\n        /** @type {LayouteerEditorCell} above cell */\n        this.top = options.top;\n\n        /** @type {LayouteerEditorCell} cell on the right */\n        this.right = options.right;\n        \n        /** @type {LayouteerEditorCell} cell below */\n        this.bottom = options.bottom;\n        /** Line index if cell is part of the line */\n        this.line = options.line;\n    }\n\n    /**\n     * @returns {boolean} true if cell contains corner sign\n     */\n    isCorner()\n    {\n        return this.getValue() == '+';\n    }\n\n    /**\n     * @returns {boolean} true if cell contains horizontal line or corner sign\n     */\n    isHorizontalLine()\n    {\n        return this.getValue() == '-' || this.isCorner();\n    }\n\n    /**\n     * @returns {boolean} true if cell contains vertical line or corner sign\n     */\n    isVerticalLine()\n    {\n        return this.getValue() == '|' || this.isCorner();\n    }\n\n    /**\n     * @param {string} value Value to be set\n     */\n    setValue(value)\n    {\n        this.el.innerHTML = value;\n    }\n\n    /**\n     * @returns {string} The cell value\n     */\n    getValue()\n    {\n        return this.el.innerHTML;\n    }\n}\n","import Layouteer from './layouteer';\n\n// Expose layouteer \nwindow.layouteer = Layouteer;\n"],"sourceRoot":""}